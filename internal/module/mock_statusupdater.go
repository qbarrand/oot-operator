// Code generated by MockGen. DO NOT EDIT.
// Source: statusupdater.go

// Package module is a generated GoMock package.
package module

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/qbarrand/oot-operator/api/v1alpha1"
	v1 "k8s.io/api/core/v1"
)

// MockStatusUpdater is a mock of StatusUpdater interface.
type MockStatusUpdater struct {
	ctrl     *gomock.Controller
	recorder *MockStatusUpdaterMockRecorder
}

// MockStatusUpdaterMockRecorder is the mock recorder for MockStatusUpdater.
type MockStatusUpdaterMockRecorder struct {
	mock *MockStatusUpdater
}

// NewMockStatusUpdater creates a new mock instance.
func NewMockStatusUpdater(ctrl *gomock.Controller) *MockStatusUpdater {
	mock := &MockStatusUpdater{ctrl: ctrl}
	mock.recorder = &MockStatusUpdaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusUpdater) EXPECT() *MockStatusUpdaterMockRecorder {
	return m.recorder
}

// UpdateModuleStatus mocks base method.
func (m *MockStatusUpdater) UpdateModuleStatus(ctx context.Context, mod *v1alpha1.Module, kernelMappingNodes, targetedNodes []v1.Node) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateModuleStatus", ctx, mod, kernelMappingNodes, targetedNodes)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateModuleStatus indicates an expected call of UpdateModuleStatus.
func (mr *MockStatusUpdaterMockRecorder) UpdateModuleStatus(ctx, mod, kernelMappingNodes, targetedNodes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateModuleStatus", reflect.TypeOf((*MockStatusUpdater)(nil).UpdateModuleStatus), ctx, mod, kernelMappingNodes, targetedNodes)
}
