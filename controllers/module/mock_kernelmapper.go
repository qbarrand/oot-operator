// Code generated by MockGen. DO NOT EDIT.
// Source: kernelmapper.go

// Package module is a generated GoMock package.
package module

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "github.com/qbarrand/oot-operator/api/v1beta1"
)

// MockKernelMapper is a mock of KernelMapper interface.
type MockKernelMapper struct {
	ctrl     *gomock.Controller
	recorder *MockKernelMapperMockRecorder
}

// MockKernelMapperMockRecorder is the mock recorder for MockKernelMapper.
type MockKernelMapperMockRecorder struct {
	mock *MockKernelMapper
}

// NewMockKernelMapper creates a new mock instance.
func NewMockKernelMapper(ctrl *gomock.Controller) *MockKernelMapper {
	mock := &MockKernelMapper{ctrl: ctrl}
	mock.recorder = &MockKernelMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKernelMapper) EXPECT() *MockKernelMapperMockRecorder {
	return m.recorder
}

// FindImageForKernel mocks base method.
func (m *MockKernelMapper) FindImageForKernel(mappings []v1beta1.KernelMapping, kernelVersion string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindImageForKernel", mappings, kernelVersion)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindImageForKernel indicates an expected call of FindImageForKernel.
func (mr *MockKernelMapperMockRecorder) FindImageForKernel(mappings, kernelVersion interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindImageForKernel", reflect.TypeOf((*MockKernelMapper)(nil).FindImageForKernel), mappings, kernelVersion)
}
